% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots.R
\name{plots}
\alias{plots}
\title{Plotting for linear and logistic regression models}
\usage{
plots(
  x,
  points = FALSE,
  size = 1,
  alpha = 0.2,
  jitter = 0.03,
  ci = TRUE,
  page = FALSE,
  ...
)
}
\arguments{
\item{x}{an object of class \code{"lm"} or \code{"glm"}}

\item{points}{logical; If TRUE, if raw data are plotted (default=FALSE)}

\item{size}{size of data points, default is 1}

\item{alpha}{transparency of data points (from 0 to 1; default is 0.2)}

\item{jitter}{amount of jitter for points (from 0 to 1; default = .03)}

\item{ci}{if confidence intervals are to be shown, default is TRUE}

\item{page}{logical; If \code{TRUE}, each graph will be printed separately.}

\item{...}{additional arguments to be passed to
\code{\link[ggeffects]{plot.ggeffects}}.}
}
\value{
a list of plots of class \code{ggplot2}.
}
\description{
The \code{plots} function provides a single plot that shows separate graphs of the relationship
between each predictor and the outcome, controlling for the other predictors in the model.
}
\details{
The \code{plots} function uses the \code{ggeffects} package to plot the results of the lm or glm functions
The ggeffects package aims to easily calculate marginal effects and adjusted predictions
at representative values of covariates from statistical models, i.e. predictions generated by a model when
one holds the controlled dependent variable(s) constant and varies the independent variable(s).
To see more details and gain better understanding of the ggeffects package see
\href{https://strengejacke.github.io/ggeffects/}{here}.
}
\section{Limitations}{

The \code{plots} function can not handle models that include
\code{as.factor} or \code{factor} in their formulas. Create the modified
variables prior to fitting the model
(e.g., \code{mtcars$cyl <- factor(mtcars$cyl)}).
Additionally, the function can not handle models that include interactions. In this
case, consider using the \code{ggeffects} package with grouping and
faceting.
}

\examples{
fit1 <- lm(mpg ~ hp + wt + accel + origin, data = auto_mpg)
plots(fit1)

mtcars$am <- factor(mtcars$am)
fit2 <- glm(am ~ hp + wt + mpg, family=binomial, mtcars)
plots(fit2)
}
\seealso{
\link[ggeffects]{ggeffect}, \link[ggeffects]{plot.ggeffects}
}
